apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: configuration-local-registry
spec:
  compositeTypeRef:
    apiVersion: kndp.io/v1alpha1
    kind: LocalRegistry
  resources:


    - name: kyverno-policy-regplc
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: kyverno.io/v1
              kind: ClusterPolicy
              spec:
                generateExisting: true
                rules:
                  - name: ""
                    match:
                      any:
                        - resources:
                            kinds:
                              - Pod
                    skipBackgroundRequests: false
                    mutate:
                      foreach:
                        - list: request.object.spec.containers
                          patchStrategicMerge:
                            spec:
                              containers:
                                - (image): ""
                                  image: ""
      patches:
      - type: FromCompositeFieldPath
        fromFieldPath: spec.kubernetesProviderCfgRef
        toFieldPath: spec.providerConfigRef.name
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.name
        transforms:
          - type: string
            string:
              type: Format
              fmt: "%s-scplc"
        toFieldPath: spec.forProvider.manifest.metadata.name
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.namespace
        toFieldPath: spec.forProvider.manifest.metadata.namespace
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.name
        transforms:
          - type: string
            string:
              type: Format
              fmt: "%s-regplc"
        toFieldPath: spec.forProvider.manifest.metadata.name
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.name
        transforms:
          - type: string
            string:
              type: Format
              fmt: "%s-regplc"
        toFieldPath: spec.forProvider.manifest.spec.rules[0].name
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.name
        transforms:
          - type: string
            string:
              type: Format
              fmt: "*%s*"
        toFieldPath: spec.forProvider.manifest.spec.rules[0].mutate.foreach[0].patchStrategicMerge.spec.containers[0].(image)
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.name
        transforms:
          - type: string
            string:
              type: Format
              fmt: "%s-regplc"
        toFieldPath: metadata.name
      - type: FromCompositeFieldPath
        fromFieldPath: spec.nodePort
        transforms:
          - type: string
            string:
              type: Format
              fmt: "{{ regex_replace_all_literal('^[^/]+', '{{element.image}}', 'localhost:%s') }}"
        toFieldPath: spec.forProvider.manifest.spec.rules[0].mutate.foreach[0].patchStrategicMerge.spec.containers[0].image